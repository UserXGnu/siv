section	asm_fnc.asm	/^section .data$/;"	l
string	asm_fnc.asm	/^	string db "Hello world", 0x0a, 0x00$/;"	d
section	asm_fnc.asm	/^section .text$/;"	l
extern	asm_fnc.asm	/^extern g_print$/;"	l
asm_fnc1	asm_fnc.asm	/^asm_fnc1:$/;"	l
asm_fnc2	asm_fnc.asm	/^asm_fnc2:$/;"	l
asm_fnc3	asm_fnc.asm	/^asm_fnc3:$/;"	l
asm_fnc4	asm_fnc.asm	/^asm_fnc4:$/;"	l
_EditorMenuBarPrivate	editor-menu-bar.c	/^struct _EditorMenuBarPrivate {$/;"	s	file:
OpenItem	editor-menu-bar.c	/^	 GtkWidget * OpenItem;$/;"	m	struct:_EditorMenuBarPrivate	file:
ExitItem	editor-menu-bar.c	/^	 GtkWidget * ExitItem;$/;"	m	struct:_EditorMenuBarPrivate	file:
AboutItem	editor-menu-bar.c	/^	 GtkWidget * AboutItem;$/;"	m	struct:_EditorMenuBarPrivate	file:
CppFunc1	editor-menu-bar.c	/^	 GtkWidget * CppFunc1;$/;"	m	struct:_EditorMenuBarPrivate	file:
CppFunc2	editor-menu-bar.c	/^	 GtkWidget * CppFunc2;$/;"	m	struct:_EditorMenuBarPrivate	file:
CppFunc3	editor-menu-bar.c	/^	 GtkWidget * CppFunc3;$/;"	m	struct:_EditorMenuBarPrivate	file:
CppFunc4	editor-menu-bar.c	/^	 GtkWidget * CppFunc4;$/;"	m	struct:_EditorMenuBarPrivate	file:
AsmFunc1	editor-menu-bar.c	/^	 GtkWidget * AsmFunc1;$/;"	m	struct:_EditorMenuBarPrivate	file:
AsmFunc2	editor-menu-bar.c	/^	 GtkWidget * AsmFunc2;$/;"	m	struct:_EditorMenuBarPrivate	file:
AsmFunc3	editor-menu-bar.c	/^	 GtkWidget * AsmFunc3;$/;"	m	struct:_EditorMenuBarPrivate	file:
AsmFunc4	editor-menu-bar.c	/^	 GtkWidget * AsmFunc4;$/;"	m	struct:_EditorMenuBarPrivate	file:
LittleTrick	editor-menu-bar.c	/^	 GtkWidget * LittleTrick;$/;"	m	struct:_EditorMenuBarPrivate	file:
editor_menubar_get_exititem	editor-menu-bar.c	/^editor_menubar_get_exititem (EditorMenuBar * self) {$/;"	f
editor_menubar_get_openitem	editor-menu-bar.c	/^editor_menubar_get_openitem (EditorMenuBar * self) {$/;"	f
editor_menubar_get_cppf1	editor-menu-bar.c	/^editor_menubar_get_cppf1 (EditorMenuBar * self) {$/;"	f
editor_menubar_get_cppf2	editor-menu-bar.c	/^editor_menubar_get_cppf2 (EditorMenuBar * self) {$/;"	f
editor_menubar_get_cppf3	editor-menu-bar.c	/^editor_menubar_get_cppf3 (EditorMenuBar * self) {$/;"	f
editor_menubar_get_cppf4	editor-menu-bar.c	/^editor_menubar_get_cppf4 (EditorMenuBar * self) {$/;"	f
editor_menubar_init	editor-menu-bar.c	/^editor_menubar_init (EditorMenuBar * self) {$/;"	f	file:
editor_menubar_finalize	editor-menu-bar.c	/^editor_menubar_finalize (GObject *object) {$/;"	f	file:
editor_menubar_class_init	editor-menu-bar.c	/^editor_menubar_class_init (EditorMenuBarClass *klass) {$/;"	f	file:
editor_menubar_new	editor-menu-bar.c	/^editor_menubar_new (void) {$/;"	f
_EditorWindowPrivate	editor-window.c	/^struct _EditorWindowPrivate {$/;"	s	file:
box	editor-window.c	/^	 GtkWidget * box;$/;"	m	struct:_EditorWindowPrivate	file:
MenuBar	editor-window.c	/^	 GtkWidget * MenuBar;$/;"	m	struct:_EditorWindowPrivate	file:
Image	editor-window.c	/^	 GtkWidget * Image;$/;"	m	struct:_EditorWindowPrivate	file:
editor_window_get_image	editor-window.c	/^editor_window_get_image (EditorWindow * self) {$/;"	f
editor_window_get_menubar	editor-window.c	/^editor_window_get_menubar (EditorWindow * self) {$/;"	f
editor_window_get_box	editor-window.c	/^editor_window_get_box (EditorWindow * self) {$/;"	f
editor_window_set_image	editor-window.c	/^editor_window_set_image ( EditorWindow * self, GtkWidget * image) {$/;"	f
editor_window_init	editor-window.c	/^editor_window_init (EditorWindow * self) {$/;"	f	file:
editor_window_finalize	editor-window.c	/^editor_window_finalize (GObject *object)$/;"	f	file:
editor_window_class_init	editor-window.c	/^editor_window_class_init (EditorWindowClass *klass)$/;"	f	file:
editor_window_new	editor-window.c	/^editor_window_new (void) {$/;"	f
main	main.c	/^main (int argc, char ** argv) {$/;"	f
_EDITOR_CONTROLLER_H_	editor-controller.h	21;"	d
EDITOR_TYPE_CONTROLLER	editor-controller.h	30;"	d
EDITOR_CONTROLLER	editor-controller.h	31;"	d
EDITOR_CONTROLLER_CLASS	editor-controller.h	32;"	d
EDITOR_IS_CONTROLLER	editor-controller.h	33;"	d
EDITOR_IS_CONTROLLER_CLASS	editor-controller.h	34;"	d
EDITOR_CONTROLLER_GET_CLASS	editor-controller.h	35;"	d
EDITOR_CONTROLLER_GET_PRIVATE	editor-controller.h	36;"	d
RED_LEVEL	editor-controller.h	38;"	d
GREEN_LEVEL	editor-controller.h	39;"	d
BLUE_LEVEL	editor-controller.h	40;"	d
ALPHA_LEVEL	editor-controller.h	41;"	d
COLOR_DATA	editor-controller.h	43;"	d
COLOR	editor-controller.h	44;"	d
EditorControllerClass	editor-controller.h	/^typedef struct _EditorControllerClass EditorControllerClass;$/;"	t	typeref:struct:_EditorControllerClass
EditorController	editor-controller.h	/^typedef struct _EditorController EditorController;$/;"	t	typeref:struct:_EditorController
EditorControllerPrivate	editor-controller.h	/^typedef struct _EditorControllerPrivate EditorControllerPrivate;$/;"	t	typeref:struct:_EditorControllerPrivate
color_data_t	editor-controller.h	/^typedef struct color_data_ color_data_t;$/;"	t	typeref:struct:color_data_
RED	editor-controller.h	/^	RED = 0,$/;"	e	enum:__anon1
GREEN	editor-controller.h	/^	GREEN,$/;"	e	enum:__anon1
BLUE	editor-controller.h	/^	BLUE,$/;"	e	enum:__anon1
RGB_COLOR	editor-controller.h	/^}RGB_COLOR;$/;"	t	typeref:enum:__anon1
color_	editor-controller.h	/^struct color_ {$/;"	s
color	editor-controller.h	/^	RGB_COLOR color;$/;"	m	struct:color_
level	editor-controller.h	/^	gint level;$/;"	m	struct:color_
color_data_	editor-controller.h	/^struct color_data_ {$/;"	s
a	editor-controller.h	/^	guint a;$/;"	m	struct:color_data_
window	editor-controller.h	/^	GtkWidget * window;$/;"	m	struct:color_data_
entry	editor-controller.h	/^	GtkWidget * entry;$/;"	m	struct:color_data_
combo	editor-controller.h	/^	GtkWidget * combo;$/;"	m	struct:color_data_
main_data	editor-controller.h	/^	gpointer * main_data;$/;"	m	struct:color_data_
_EditorControllerClass	editor-controller.h	/^struct _EditorControllerClass$/;"	s
parent_class	editor-controller.h	/^	GObjectClass parent_class;$/;"	m	struct:_EditorControllerClass
_EditorController	editor-controller.h	/^struct _EditorController$/;"	s
parent_instance	editor-controller.h	/^	GObject parent_instance;$/;"	m	struct:_EditorController
priv	editor-controller.h	/^	EditorControllerPrivate *priv;$/;"	m	struct:_EditorController
editor_controller_new	editor-controller.h	/^GObject * editor_controller_new (void);$/;"	p
editor_controller_get_window	editor-controller.h	/^GtkWidget * editor_controller_get_window (EditorController * self);$/;"	p
_EDITOR_MENU_BAR_H_	editor-menu-bar.h	21;"	d
EDITOR_TYPE_MENU_BAR	editor-menu-bar.h	27;"	d
EDITOR_MENU_BAR	editor-menu-bar.h	28;"	d
EDITOR_MENU_BAR_CLASS	editor-menu-bar.h	29;"	d
EDITOR_IS_MENU_BAR	editor-menu-bar.h	30;"	d
EDITOR_IS_MENU_BAR_CLASS	editor-menu-bar.h	31;"	d
EDITOR_MENU_BAR_GET_CLASS	editor-menu-bar.h	32;"	d
EDITOR_MENU_BAR_GET_PRIVATE	editor-menu-bar.h	33;"	d
EditorMenuBarClass	editor-menu-bar.h	/^typedef struct _EditorMenuBarClass EditorMenuBarClass;$/;"	t	typeref:struct:_EditorMenuBarClass
EditorMenuBar	editor-menu-bar.h	/^typedef struct _EditorMenuBar EditorMenuBar;$/;"	t	typeref:struct:_EditorMenuBar
EditorMenuBarPrivate	editor-menu-bar.h	/^typedef struct _EditorMenuBarPrivate EditorMenuBarPrivate;$/;"	t	typeref:struct:_EditorMenuBarPrivate
_EditorMenuBarClass	editor-menu-bar.h	/^struct _EditorMenuBarClass {$/;"	s
parent_class	editor-menu-bar.h	/^	GtkMenuBarClass parent_class;$/;"	m	struct:_EditorMenuBarClass
_EditorMenuBar	editor-menu-bar.h	/^struct _EditorMenuBar {$/;"	s
parent_instance	editor-menu-bar.h	/^	GtkMenuBar parent_instance;$/;"	m	struct:_EditorMenuBar
priv	editor-menu-bar.h	/^	EditorMenuBarPrivate *priv;$/;"	m	struct:_EditorMenuBar
editor_menubar_new	editor-menu-bar.h	/^GtkWidget * editor_menubar_new (void);$/;"	p
editor_menubar_get_openitem	editor-menu-bar.h	/^GtkWidget * editor_menubar_get_openitem (EditorMenuBar * self);$/;"	p
editor_menubar_get_exititem	editor-menu-bar.h	/^GtkWidget * editor_menubar_get_exititem (EditorMenuBar * self);$/;"	p
editor_menubar_get_cppf1	editor-menu-bar.h	/^GtkWidget * editor_menubar_get_cppf1 (EditorMenuBar * self);$/;"	p
editor_menubar_get_cppf2	editor-menu-bar.h	/^GtkWidget * editor_menubar_get_cppf2 (EditorMenuBar * self);$/;"	p
editor_menubar_get_cppf3	editor-menu-bar.h	/^GtkWidget * editor_menubar_get_cppf3 (EditorMenuBar * self);$/;"	p
editor_menubar_get_cppf4	editor-menu-bar.h	/^GtkWidget * editor_menubar_get_cppf4 (EditorMenuBar * self);$/;"	p
_EDITOR_WINDOW_H_	editor-window.h	21;"	d
EDITOR_TYPE_WINDOW	editor-window.h	27;"	d
EDITOR_WINDOW	editor-window.h	28;"	d
EDITOR_WINDOW_CLASS	editor-window.h	29;"	d
EDITOR_IS_WINDOW	editor-window.h	30;"	d
EDITOR_IS_WINDOW_CLASS	editor-window.h	31;"	d
EDITOR_WINDOW_GET_CLASS	editor-window.h	32;"	d
EDITOR_WINDOW_GET_PRIVATE	editor-window.h	33;"	d
DEFAULT_HEIGHT	editor-window.h	35;"	d
DEFAULT_WIDTH	editor-window.h	36;"	d
EditorWindowClass	editor-window.h	/^typedef struct _EditorWindowClass EditorWindowClass;$/;"	t	typeref:struct:_EditorWindowClass
EditorWindow	editor-window.h	/^typedef struct _EditorWindow EditorWindow;$/;"	t	typeref:struct:_EditorWindow
EditorWindowPrivate	editor-window.h	/^typedef struct _EditorWindowPrivate EditorWindowPrivate;$/;"	t	typeref:struct:_EditorWindowPrivate
_EditorWindowClass	editor-window.h	/^struct _EditorWindowClass$/;"	s
parent_class	editor-window.h	/^	GtkWindowClass parent_class;$/;"	m	struct:_EditorWindowClass
_EditorWindow	editor-window.h	/^struct _EditorWindow$/;"	s
parent_instance	editor-window.h	/^	GtkWindow parent_instance;$/;"	m	struct:_EditorWindow
priv	editor-window.h	/^	EditorWindowPrivate *priv;$/;"	m	struct:_EditorWindow
editor_window_new	editor-window.h	/^GtkWidget * editor_window_new (void);$/;"	p
editor_window_get_image	editor-window.h	/^GtkWidget * editor_window_get_image (EditorWindow * self);$/;"	p
editor_window_get_menubar	editor-window.h	/^GtkWidget * editor_window_get_menubar (EditorWindow * self);$/;"	p
editor_window_get_box	editor-window.h	/^GtkWidget * editor_window_get_box (EditorWindow * self);$/;"	p
editor_window_set_image	editor-window.h	/^void editor_window_set_image ( EditorWindow * self, GtkWidget * image);$/;"	p
CC	Makefile	/^CC=gcc$/;"	m
ASM	Makefile	/^ASM=nasm$/;"	m
ASMFLAG	Makefile	/^ASMFLAG=-felf64 -o $/;"	m
CFLAG	Makefile	/^CFLAG=-o$/;"	m
OBJ_FLAG	Makefile	/^OBJ_FLAG=-c$/;"	m
PKGCONFIG	Makefile	/^PKGCONFIG=`pkg-config --libs --cflags gtk+-3.0`$/;"	m
EXEC	Makefile	/^EXEC=main$/;"	m
MAIN	Makefile	/^MAIN=main.c$/;"	m
ASM_FILE	Makefile	/^ASM_FILE=asm_fnc.asm $/;"	m
ASM_OBJ	Makefile	/^ASM_OBJ=asm_fnc.o$/;"	m
OBJ_FILES	Makefile	/^OBJ_FILES=$(ASM_OBJ) editor-menu-bar.o editor-window.o editor-controller.o$/;"	m
asm_fnc1	editor-controller.c	/^extern void asm_fnc1 (void);$/;"	p	file:
asm_fnc2	editor-controller.c	/^extern void asm_fnc2 (void);$/;"	p	file:
asm_fnc3	editor-controller.c	/^extern void asm_fnc3 (void);$/;"	p	file:
asm_fnc4	editor-controller.c	/^extern void asm_fnc4 (void);$/;"	p	file:
_EditorControllerPrivate	editor-controller.c	/^struct _EditorControllerPrivate {$/;"	s	file:
Window	editor-controller.c	/^	GtkWidget * Window;$/;"	m	struct:_EditorControllerPrivate	file:
editor_controller_open_callback	editor-controller.c	/^editor_controller_open_callback (GtkWidget * self, gpointer data) {$/;"	f
editor_controller_cppfunc1_callback	editor-controller.c	/^editor_controller_cppfunc1_callback (GtkWidget * self, gpointer data) {$/;"	f
editor_controller_cppfunc2_callback	editor-controller.c	/^editor_controller_cppfunc2_callback (GtkWidget * self, gpointer data) {$/;"	f
LEVEL	editor-controller.c	166;"	d	file:
editor_controller_cppfunc3_callback	editor-controller.c	/^editor_controller_cppfunc3_callback (GtkWidget * self, gpointer data) {$/;"	f
editor_controller_cppfunc4_callback	editor-controller.c	/^editor_controller_cppfunc4_callback (GtkWidget * self, gpointer data) {$/;"	f
editor_controller_get_window	editor-controller.c	/^editor_controller_get_window (EditorController * self) {$/;"	f
editor_controller_connect_signals	editor-controller.c	/^editor_controller_connect_signals (EditorController * self) {$/;"	f
editor_controller_init	editor-controller.c	/^editor_controller_init (EditorController * self) {$/;"	f	file:
editor_controller_finalize	editor-controller.c	/^editor_controller_finalize (GObject * object) {$/;"	f	file:
editor_controller_class_init	editor-controller.c	/^editor_controller_class_init (EditorControllerClass * klass) {$/;"	f	file:
editor_controller_new	editor-controller.c	/^editor_controller_new (void) {$/;"	f
